#pragma checksum "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d6285964bc8b4a01de36fd9a670a09af87267941"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Kiosk_Menu_Hambuger2), @"mvc.1.0.view", @"/Views/Kiosk/Menu_Hambuger2.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Kiosk/Menu_Hambuger2.cshtml", typeof(AspNetCore.Views_Kiosk_Menu_Hambuger2))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\_ViewImports.cshtml"
using cSharpPro;

#line default
#line hidden
#line 2 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\_ViewImports.cshtml"
using cSharpPro.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d6285964bc8b4a01de36fd9a670a09af87267941", @"/Views/Kiosk/Menu_Hambuger2.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f49734941aa9055b6b4d8a305c95637b4de87b4", @"/Views/_ViewImports.cshtml")]
    public class Views_Kiosk_Menu_Hambuger2 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/comstouch.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("40%"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("30%"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn-img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/voice-recognition.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width:40px;padding:2px; "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/menuimage/cyburger.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/menuimage/unbeliev.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/menuimage/incredible.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/menuimage/cheesebacon.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/menuimage/chickcutlet.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/menuimage/shrimp.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/menuimage/hallaga.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/menuimage/hallasal.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/menuimage/hamcheese.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 29, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n");
            EndContext();
            BeginContext(29, 1445, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "215f451f90744611811bb889af29ac10", async() => {
                BeginContext(35, 1432, true);
                WriteLiteral(@"
    <title>menu_hamburger2.html</title>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <!-- CSS -->
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"">
    <!-- JS -->
    <link rel=""stylesheet"" type=""text/css"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css""
          media=""all"">
    <script src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js' type='text/javascript'></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js""></script>
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js""></script>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css""
          integrity=""sha384-Zug+QiDoJOrZ5t4ls");
                WriteLiteral(@"sLdxGhVrurbmBWopoEl+M6BdEfwnCJZtKxi1KgxUyJq13dy"" crossorigin=""anonymous"">

    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta http-equiv=""X-UA-Compatible"" content=""ie=edge"">
    <link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.8.1/css/all.css"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1474, 997, true);
            WriteLiteral(@"

<style>
    nav ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
        background: #e3e3e3;
        position: relative;
    }

    nav ul li {
        display: inline-block;
    }

    nav ul li a {
        color: #292929;
        text-decoration: none;
        padding: 15px;
        display: block;
    }

    nav ul li:hover {
        background: lightgrey;
    }

    nav ul ul {
        position: absolute;
        min-width: 200px;
        background: lightgrey;
        display: none;
    }

    nav ul ul li {
        display: block;
        background: #e3e3e3;
    }

    nav ul li:hover ul {
        display: block;
    }

    nav ul li i {
        color: #292929;
        float: right;
        padding-left: 20px;
    }

    nav div {
        background: lightgrey;
        color: #292929;
        font-size: 24px;
        padding: 0.6em;
        cursor: pointer;
        display: none;
    }

    ");
            EndContext();
            BeginContext(2472, 235, true);
            WriteLiteral("@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {\r\n        body {\r\n            margin-left: none;\r\n            margin-right: none;\r\n            font-family: \"배달의민족 한나는 열한살\";\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    ");
            EndContext();
            BeginContext(2708, 861, true);
            WriteLiteral(@"@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {

        .container {
            height: 1200px;
        }

    }


    .btn-border {
        border-radius: 30px;
        border: 50px;
        height: 70px;
        width: 300px;
        font-size: 30px;
    }

    .mainbtn {
        height: 1200px;
    }



    /* table {
      width: 100%;
      border: 1px solid #000000;
  }
*/
    table tbody>td {
        border: 1px solid #000000;
        text-align: center;
    }

    thead>th {
        border: 1px solid #000000;
        text-align: center;
    }

    tr {
        text-align: center;
    }

    td {
        width: 25%;
        height: 25%;
        padding: 10px;
        text-align: center;
    }

    .pagination {
        justify-content: center;
    }


    ");
            EndContext();
            BeginContext(3570, 221, true);
            WriteLiteral("@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {\r\n        .navbar {\r\n            background-color: #EEEEF0;\r\n            opacity: 0.5;\r\n        }\r\n    }\r\n\r\n\r\n    /* Navigation links */\r\n    ");
            EndContext();
            BeginContext(3792, 358, true);
            WriteLiteral(@"@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {
        .navbar a {
            float: left;
            font-size: 16px;
            color: rgb(0, 0, 0);
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;


        }
    }


    /* The subnavigation menu */
    ");
            EndContext();
            BeginContext(4151, 208, true);
            WriteLiteral("@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {\r\n        .subnav {\r\n            float: left;\r\n            overflow: hidden;\r\n        }\r\n    }\r\n\r\n\r\n    /* Subnav button */\r\n    ");
            EndContext();
            BeginContext(4360, 455, true);
            WriteLiteral(@"@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {
        .subnav .subnavbtn {
            font-size: 16px;
            border: none;
            outline: none;
            color: rgb(0, 0, 0);
            padding: 14px 16px;
            background-color: inherit;
            font-family: inherit;
            margin: 0;
        }
    }


    /* Add a red background color to navigation links on hover */
    ");
            EndContext();
            BeginContext(4816, 269, true);
            WriteLiteral(@"@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {

        .navbar a:hover,
        .subnav:hover .subnavbtn {
            background-color: #28C35E;
        }

    }

    /* Style the subnav content - positioned absolute */
    ");
            EndContext();
            BeginContext(5086, 342, true);
            WriteLiteral(@"@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {
        .subnav-content {
            display: none;
            position: absolute;
            left: 0;
            background-color: #28C35E;
            width: 100%;
            z-index: 1;
        }
    }


    /* Style the subnav links */
    ");
            EndContext();
            BeginContext(5429, 273, true);
            WriteLiteral(@"@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {
        .subnav-content a {
            float: left;
            color: white;
            text-decoration: none;
        }
    }


    /* Add a grey background color on hover */
    ");
            EndContext();
            BeginContext(5703, 292, true);
            WriteLiteral(@"@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {
        .subnav-content a:hover {
            background-color: #eee;
            color: black;
        }

    }

    /* When you move the mouse over the subnav container, open the subnav content */
    ");
            EndContext();
            BeginContext(5996, 171, true);
            WriteLiteral("@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {\r\n        .subnav:hover .subnav-content {\r\n            display: block;\r\n        }\r\n    }\r\n\r\n");
            EndContext();
            BeginContext(6168, 168, true);
            WriteLiteral("@media only screen and(min-device-width: 768px) and (max-device-width:1024px){\r\n  h4 {\r\n      color: orange;\r\n  }\r\n }\r\n\r\n    h2 {\r\n        color: orange;\r\n    }\r\n\r\n    ");
            EndContext();
            BeginContext(6337, 2752, true);
            WriteLiteral(@"@media only screen and(min-device-width: 768px) and (max-device-width:1024px) {

        #burg10,
        #burg11,
        #burg12,
        #burg13,
        #burg14,
        #burg15,
        #burg16,
        #burg17,
        #burg18 {
            padding: 0;
            border: none;
            background: none;
            width: 250px;
            height: 25px;
        }
    }

    *,
    *::before,
    *::after {
        padding: 0;
        margin: 0;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
    }

    body {
        background: -webkit-gradient(linear, left top, right top, from(#16a085), to(#f4d03f));
        background: linear-gradient(90deg, #16a085, #f4d03f);
        font-family: ""Montserrat"", sans-serif;
        color: #fff;
        height: 100vh;
    }

    .menu ol {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .menu ol:first-child {
        width: 100%;
        max-width: 960px;
        margi");
            WriteLiteral(@"n: 1rem auto 0 auto;
        display: -ms-grid;
        display: grid;
        -ms-grid-columns: (1fr)[4];
        grid-template-columns: repeat(4, 1fr);
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.3);
        box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.3);
    }

    .menu-item {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        border-top: 2px solid #16a085;
        position: relative;
        -webkit-transition: background 0.3s ease-in-out;
        transition: background 0.3s ease-in-out;
    }

    .menu-item:nth-child(1)>a::before {
        content: ""\f015"";
    }

    .menu-item:nth-child(2)>a::before {
        content: ""\f805"";
    }
");
            WriteLiteral(@"
    .menu-item:nth-child(3)>a::before {
        content: ""\f2e7"";
    }

    .menu-item:nth-child(4)>a::before {
        content: ""\f7b6"";
    }

    .menu-item:nth-child(5)>a::before {
        content: ""\f164""
    }

    .menu-item:nth-child(1)>a::before {
        font-family: ""Font Awesome 5 Free"";
        font-size: 1.2rem;
        display: block;
        margin-bottom: 1rem;
        font-weight: 900;
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: inline-block;
        font-style: normal;
        font-variant: normal;
        text-rendering: auto;
        line-height: 1;
        color: #16a085;
    }

    ");
            EndContext();
            BeginContext(9090, 599, true);
            WriteLiteral(@"@media (min-width: 768px) {
        .menu-item:nth-child(1)>a::before {
            font-size: 1.5rem;
        }
    }

    .menu-item:nth-child(2)>a::before {
        font-family: ""Font Awesome 5 Free"";
        font-size: 1.2rem;
        display: block;
        margin-bottom: 1rem;
        font-weight: 900;
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: inline-block;
        font-style: normal;
        font-variant: normal;
        text-rendering: auto;
        line-height: 1;
        color: #16a085;
    }

    ");
            EndContext();
            BeginContext(9690, 599, true);
            WriteLiteral(@"@media (min-width: 768px) {
        .menu-item:nth-child(2)>a::before {
            font-size: 1.5rem;
        }
    }

    .menu-item:nth-child(3)>a::before {
        font-family: ""Font Awesome 5 Free"";
        font-size: 1.2rem;
        display: block;
        margin-bottom: 1rem;
        font-weight: 900;
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: inline-block;
        font-style: normal;
        font-variant: normal;
        text-rendering: auto;
        line-height: 1;
        color: #16a085;
    }

    ");
            EndContext();
            BeginContext(10290, 599, true);
            WriteLiteral(@"@media (min-width: 768px) {
        .menu-item:nth-child(3)>a::before {
            font-size: 1.5rem;
        }
    }

    .menu-item:nth-child(4)>a::before {
        font-family: ""Font Awesome 5 Free"";
        font-size: 1.2rem;
        display: block;
        margin-bottom: 1rem;
        font-weight: 900;
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: inline-block;
        font-style: normal;
        font-variant: normal;
        text-rendering: auto;
        line-height: 1;
        color: #16a085;
    }

    ");
            EndContext();
            BeginContext(10890, 599, true);
            WriteLiteral(@"@media (min-width: 768px) {
        .menu-item:nth-child(4)>a::before {
            font-size: 1.5rem;
        }
    }

    .menu-item:nth-child(5)>a::before {
        font-family: ""Font Awesome 5 Free"";
        font-size: 1.2rem;
        display: block;
        margin-bottom: 1rem;
        font-weight: 900;
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: inline-block;
        font-style: normal;
        font-variant: normal;
        text-rendering: auto;
        line-height: 1;
        color: #16a085;
    }

    ");
            EndContext();
            BeginContext(11490, 2008, true);
            WriteLiteral(@"@media (min-width: 768px) {
        .menu-item:nth-child(5)>a::before {
            font-size: 1.5rem;
        }
    }

    .menu-item .sub-menu>a {
        color: red;
    }

    .menu-item:not(:last-child) {
        border-right: 1px solid rgba(255, 255, 255, 0.15);
    }

    .menu-item .sub-menu {
        position: absolute;
        top: 100%;
        width: 100%;
        -webkit-transform-origin: top;
        transform-origin: top;
        -webkit-transform: rotateX(-90deg);
        transform: rotateX(-90deg);
        -webkit-transition: -webkit-transform 0.3s linear;
        transition: -webkit-transform 0.3s linear;
        transition: transform 0.3s linear;
        transition: transform 0.3s linear, -webkit-transform 0.3s linear;
        background-color: #f4d03f;
    }

    .menu-item .sub-menu .menu-item {
        border-color: rgba(255, 255, 255, 0.15);
    }

    .menu-item .sub-menu .menu-item a::before {
        content: """";
    }

    .menu-item .sub-menu .m");
            WriteLiteral(@"enu-item:first-child {
        border: 0;
    }

    .menu-item:hover,
    .menu-item.active {
        border-top: 2px solid #f4d03f;
        background-color: rgba(255, 255, 255, 0.15);
    }

    .menu-item:hover a::before,
    .menu-item.active a::before {
        color: white;
    }

    .menu-item:hover .sub-menu {
        -webkit-transform: rotateX(0deg);
        transform: rotateX(0deg);
    }

    .menu-item a {
        font-size: 0.8rem;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        color: #fff;
        text-decoration: none;
        text-transform: uppercase;
        height: 100%;
        width: 100%;
        padding: 1.5em 1em;
    }

    ");
            EndContext();
            BeginContext(13499, 154, true);
            WriteLiteral("@media (min-width: 768px) {\r\n        .menu-item a {\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n\r\n    /*# sourceMappingURL=1.css.map */\r\n</style>\r\n\r\n");
            EndContext();
            BeginContext(13653, 31760, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c55e9a6f57894c32a3ba892ed6799218", async() => {
                BeginContext(13659, 1844, true);
                WriteLiteral(@"

    <div class=""textWrapper"">
        <div id=""korea"" class=""textbox""></div>
        <div id=""english"" class=""textbox""></div>
    </div>
    <script type=""text/javascript"">

        function check(menu, price) {
        rowItem = ""<tr> <td>"";
                rowItem += menu;            // 제품명
                rowItem += ""</td > <td>"";
                rowItem += price;            //
                rowItem += ""</td > <td>""
                rowItem += 1;
                rowItem += ""</td > "";
                rowItem += ""<td><button class='btn btn-danger'>삭제하기</button></td>  </tr>"";
                $('#modaltable').append(rowItem);

                if (infoArray.length == 0)
                    infoArray.push({ name: menu, price: price, count: 1 });
                else {
                    var check = 0;
                    for (var i = 0; i < infoArray.length; i++) {
                        if (infoArray[i].name == menu) {
                            infoArray[i].count++;
            ");
                WriteLiteral(@"                check = 0;
                        }
                        else
                            check++;
                    }
                    if (check == infoArray.length)
                        infoArray.push({ name: menu, price: price, count: 1 });
                }

                //new!
                for (var j = 0; j < infoArray.length; j++) {
                    for (var k = 0; k < infoArray[j].count; k++) {
                        stackNA.push(infoArray[j].name);
                        stackPA.push(infoArray[j].price);
                    }
                    // 중복허용
                }
                //ajax통신을 통해 table에 들어가는 값을 controller로 보낸다
                $.ajax({
                    //url 타깃은 kioskcontroller의 Iteminput이라는 메소드
                    url: '");
                EndContext();
                BeginContext(15504, 31, false);
#line 584 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                     Write(Url.Action("itemInput","Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(15535, 8934, true);
                WriteLiteral(@"',
                    //contentType: ""application/json"",
                    type: 'POST',
                    traditional: true,
                    dataType: ""json"",
                    data: { picked: stackNA, price: stackPA },
                    //위와 같은원리
                    success: function (result) { },
                    error: function () { alert('error'); }
                })
                stackNA = [];
                stackPA = [];
        }

        var message = document.querySelector(""#message"");
        var button = document.querySelector(""#speech"");
        var korea = document.querySelector(""#korea"");
        var english = document.querySelector(""#english"");
        var isRecognizing = false;

        if ('SpeechRecognition' in window) {
            console.log(""음성인식을 지원하는 브라우저입니다."")
        }

        try {
            var recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition || window.mozSpeechRecognition || window.msSpeechRecognition)()");
                WriteLiteral(@";
        } catch (e) {
            console.error(e);
        }

        recognition.lang = 'ko-KR';
        recognition.interimResults = false;
        recognition.maxAlternatives = 10;



        function speech_to_text() {

            recognition.start();
            isRecognizing = true;

            recognition.onstart = function () {
                console.log(""음성인식이 시작 되었습니다. 이제 마이크에 무슨 말이든 하세요."");
            }


            recognition.onspeechend = function () {
            }

            recognition.onresult = function (event) {
                console.log('You said: ', event.results[0][0].transcript);
                // 결과를 출력
                var resText = event.results[0][0].transcript;
                korea.innerHTML = resText;

                

               if (event.results[0][0].transcript == '싸이버거 주문') {
                   check(""싸이버거"", ""3400"");
               }
               else if (event.results[0][0].transcript == '싸이버거') {
                   che");
                WriteLiteral(@"ck(""싸이버거"", ""3400"");
                }
                else if (event.results[0][0].transcript == '싸이버거 장바구니에 넣어 줘') {
                   check(""싸이버거"", ""3400"");
                }
                else if (event.results[0][0].transcript == '싸이버거 장바구니로') {
                   check(""싸이버거"", ""3400"");
                }
                else if (event.results[0][0].transcript == '싸이버거 주문하고 싶어') {
                   check(""싸이버거"", ""3400"");
                }
                else if (event.results[0][0].transcript == '싸이버거 시킬래') {
                   check(""싸이버거"", ""3400"");
                } //싸이버거

                else if (event.results[0][0].transcript == '언빌리버블 버거 주문') {
                   check(""언빌리버블버거"", ""5100"");
               }
                   else if (event.results[0][0].transcript == '언빌리버블 버거') {
                   check(""언빌리버블버거"", ""5100"");
                }
                else if (event.results[0][0].transcript == '언빌리버블버거') {
                   check(""언빌리버블버거"", ""5100"");
                ");
                WriteLiteral(@"}
                else if (event.results[0][0].transcript == '언빌리버블 버거 장바구니로') {
                   check(""언빌리버블버거"", ""5100"");
                }
                else if (event.results[0][0].transcript == '언빌리버블 버거 주문하고 싶어') {
                   check(""언빌리버블버거"", ""5100"");
                }
                else if (event.results[0][0].transcript == '언빌리버블 버거 시킬래') {
                   check(""언빌리버블버거"", ""5100"");
                } //언빌리버블버거

                else if (event.results[0][0].transcript == '인크레더블 버거 주문') {
                   check(""인크레더블버거"", ""4900"");
               }
                    else if (event.results[0][0].transcript == '인크레더블 버거') {
                   check(""인크레더블버거"", ""4900"");
                }
                else if (event.results[0][0].transcript == '인크레더블버거') {
                   check(""인크레더블버거"", ""4900"");
                }
                else if (event.results[0][0].transcript == '인크레더블 버거 장바구니로') {
                   check(""인크레더블버거"", ""4900"");
                }
       ");
                WriteLiteral(@"         else if (event.results[0][0].transcript == '인크레더블 버거 주문하고 싶어') {
                   check(""인크레더블버거"", ""4900"");
                }
                else if (event.results[0][0].transcript == '인크레더블 버거 시킬래') {
                   check(""인크레더블버거"", ""4900"");
               } //인크레더블버거

               else if (event.results[0][0].transcript == '치즈베이컨버거  주문') {
                   check(""치즈베이컨버거"", ""5400"");
               }
               else if (event.results[0][0].transcript == '치즈 베이컨버거') {
                   check(""치즈베이컨버거"", ""5400"");
               }
               else if (event.results[0][0].transcript == '치킨 커틀렛 버거') {
                   check(""치즈베이컨버거"", ""5400"");
               }
               else if (event.results[0][0].transcript == '치즈베이컨버거') {
                   check(""치즈베이컨버거"", ""5400"");
               }
               else if (event.results[0][0].transcript == '치즈베이컨버거 주문하고 싶어') {
                   check(""치즈베이컨버거"", ""5400"");
               }
               else if (event.resul");
                WriteLiteral(@"ts[0][0].transcript == '치즈베이컨버거 시킬래') {
                   check(""치즈베이컨버거"", ""5400"");
               } //치킨커틀렛버거

                else if (event.results[0][0].transcript == '치킨 커틀렛버거 주문') {
                   check(""치킨 커틀렛 버거"", ""5400"");
               }
                   else if (event.results[0][0].transcript == '치킨 커틀렛버거') {
                   check(""치킨 커틀렛 버거"", ""5400"");
                }
                else if (event.results[0][0].transcript == '치킨 커틀렛 버거') {
                   check(""치킨 커틀렛 버거"", ""5400"");
                }
                else if (event.results[0][0].transcript == '치킨 커틀렛버거 장바구니로') {
                   check(""치킨 커틀렛 버거"", ""5400"");
                }
                else if (event.results[0][0].transcript == '치킨 커틀렛버거 주문하고 싶어') {
                   check(""치킨 커틀렛 버거"", ""5400"");
                }
                else if (event.results[0][0].transcript == '치킨 커틀렛버거 시킬래') {
                   check(""치킨 커틀렛 버거"", ""5400"");
                } //치킨커틀렛버거

                else if (");
                WriteLiteral(@"event.results[0][0].transcript == '할라피뇨통가슴살버거 주문') {
                   check(""할라피뇨통가슴살버거"", ""3900"");
               }
                   else if (event.results[0][0].transcript == '할라피뇨통가슴살버거') {
                   check(""할라피뇨통가슴살버거"", ""3900"");
                }
                else if (event.results[0][0].transcript == '할라피뇨 통가슴살 버거') {
                   check(""할라피뇨통가슴살버거"", ""3900"");
                }
                else if (event.results[0][0].transcript == '할라피뇨통가슴살버거 장바구니로') {
                   check(""할라피뇨통가슴살버거"", ""3900"");
                }
                else if (event.results[0][0].transcript == '할라피뇨통가슴살버거 주문하고 싶어') {
                   check(""할라피뇨통가슴살버거"", ""3900"");
                }
                else if (event.results[0][0].transcript == '할라피뇨통가슴살버거 시킬래') {
                   check(""할라피뇨통가슴살버거"", ""3900"");
                } //할라피뇨통가슴살버거


                else if (event.results[0][0].transcript == '할라피뇨통살버거 주문') {
                   check(""할라피뇨통살버거"", ""3900"");
               }
 ");
                WriteLiteral(@"                  else if (event.results[0][0].transcript == '할라피뇨통살버거') {
                   check(""할라피뇨통살버거"", ""3900"");
                }
                else if (event.results[0][0].transcript == '할라피뇨통살버거 장바구니에 넣어 줘') {
                   check(""할라피뇨통살버거"", ""3900"");
                }
                else if (event.results[0][0].transcript == '할라피뇨통살버거 장바구니로') {
                   check(""할라피뇨통살버거"", ""3900"");
                }
                else if (event.results[0][0].transcript == '할라피뇨통살버거 주문하고 싶어') {
                   check(""할라피뇨통살버거"", ""3900"");
                }
                else if (event.results[0][0].transcript == '할라피뇨통살버거 시킬래') {
                   check(""할라피뇨통살버거"", ""3900"");
                } //할라피뇨통살버거


               


               else if (event.results[0][0].transcript == '햄치즈휠렛버거  주문') {
                   check(""햄치즈휠렛버거"", ""3900"");
               }
               else if (event.results[0][0].transcript == '햄치즈휠렛버거') {
                   check(""햄치즈휠렛버거"", ""3900"");");
                WriteLiteral(@"
                }
               else if (event.results[0][0].transcript == '햄치즈휠렛버거  장바구니에 넣어 줘') {
                   check(""햄치즈휠렛버거"", ""3900"");
                }
               else if (event.results[0][0].transcript == '햄치즈휠렛버거  장바구니로') {
                   check(""햄치즈휠렛버거"", ""3900"");
                }
               else if (event.results[0][0].transcript == '햄치즈휠렛버거  주문 하고 싶어') {
                   check(""햄치즈휠렛버거"", ""3900"");
                }
               else if (event.results[0][0].transcript == '햄치즈휠렛버거  시킬래') {
                   check(""햄치즈휠렛버거"", ""3900"");
                } //휠렛버거

                   
                else if (event.results[0][0].transcript == '주문 완료') {
                    window.location = '");
                EndContext();
                BeginContext(24470, 30, false);
#line 800 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                                  Write(Url.Action("Receipt", "Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(24500, 136, true);
                WriteLiteral("\';\r\n                }\r\n                else if (event.results[0][0].transcript == \'이제 계산 할래\') {\r\n                    window.location = \'");
                EndContext();
                BeginContext(24637, 30, false);
#line 803 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                                  Write(Url.Action("Receipt", "Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(24667, 133, true);
                WriteLiteral("\';\r\n                }\r\n                else if (event.results[0][0].transcript == \'결제해 줘\') {\r\n                    window.location = \'");
                EndContext();
                BeginContext(24801, 30, false);
#line 806 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                                  Write(Url.Action("Receipt", "Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(24831, 133, true);
                WriteLiteral("\';\r\n                }\r\n                else if (event.results[0][0].transcript == \'결제 할래\') {\r\n                    window.location = \'");
                EndContext();
                BeginContext(24965, 30, false);
#line 809 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                                  Write(Url.Action("Receipt", "Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(24995, 135, true);
                WriteLiteral("\';\r\n                }\r\n                else if (event.results[0][0].transcript == \'주문 다 했어\') {\r\n                    window.location = \'");
                EndContext();
                BeginContext(25131, 30, false);
#line 812 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                                  Write(Url.Action("Receipt", "Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(25161, 5575, true);
                WriteLiteral(@"';
                }
                    //text to sppech
                text_to_speech(resText + ""를 장바구니 에 넣었습니다."");
            };

            recognition.onend = function () {
                button.disabled = false;
                isRecognizing = false;
            }
        }

        function stop() {
            recognition.stop();
            button.disabled = false;
            isRecognizing = false;
        }



        // Text to speech
        function text_to_speech(txt) {
            // Web Speech API - speech synthesis
            if ('speechSynthesis' in window) {
                console.log(""음성합성을 지원하는  브라우저입니다."");
            }
            var msg = new SpeechSynthesisUtterance();
            var voices = window.speechSynthesis.getVoices();
            //msg.voice = voices[10]; // 두번째 부터 완전 외국인 발음이 됨. 사용하지 말것.
            msg.voiceURI = 'native';
            msg.volume = 20; // 0 to 1
            msg.rate = 1.3; // 0.1 to 10
            //msg.pitch = 2; //0");
                WriteLiteral(@" to 2
            msg.text = txt;
            msg.lang = 'ko-KR';

            msg.onend = function (e) {
                if (isRecognizing == false) {
                    recognition.start();
                }
                console.log('Finished in ' + event.elapsedTime + ' seconds.');
            };
            window.speechSynthesis.speak(msg);
        }
    </script>

    <script type=""text/javascript"">
        var infoArray = [];
        var Pitem = []//new Array();
        var Pvalue = []//new Array();

        //new!
        var stackNA = [];
        var stackPA = [];
        $(document).ready(function () {
            console.log(""readyy"");


            if (infoArray.length == 0) {
                //var table = document.getElementById(""modaltable"");
                //var rows = table.rows.length;
                var table = $('#modaltable');
                var rows = table.children().children().length;

                //console.log(table.children().children().eq(0)");
                WriteLiteral(@".children());
                //console.log(table.rows[0].cells[0]);
                // 앞에서 4개 자르고 뒤에서 4개 자르고
                for (var j = 0; j < rows; j++) {
                    console.log(j);
                    var tr = table.children().children().eq(j);
                    //var tr = table.rows[0].cells[0];
                    //alert(tr);
                    var td = tr.children();

                    if (infoArray.length == 0)
                        infoArray.push({ name: td.eq(0).text(), price: td.eq(1).text(), count: 1 });
                    else {
                        var check = 0;
                        for (var i = 0; i < infoArray.length; i++) {
                            if (infoArray[i].name == td.eq(0).text()) {
                                infoArray[i].count++;
                                check = 0;
                            }
                            else
                                check++;
                        }
                        if (");
                WriteLiteral(@"check == infoArray.length)
                            infoArray.push({ name: td.eq(0).text(), price: td.eq(1).text(), count: 1 });
                    }
                }// 테이블 0번째 행 1번째 열 값을 menu로
                // 다음열을 price로 하는 infoArray를 생성한다.
                // count를 포함한 중복도 생각해주는 배열
                // for문을 통해 테이블의 마지막 row까지 간다.
                for (var i = 0; infoArray.length > i; i++) {
                    console.log(infoArray[i].name + ""and "" + infoArray[i].count);
                }
            }
            //연동후 값 받아오기



            $("".menus"").click(function () {
                //for (int i = 0; i <)
                rowItem = ""<tr> <td>"";
                rowItem += this.attributes.value1.nodeValue;            // 제품명
                rowItem += ""</td > <td>"";
                rowItem += this.attributes.value2.nodeValue;            //
                rowItem += ""</td > <td>""
                rowItem += 1;
                rowItem += ""</td > "";
                rowItem += ""<t");
                WriteLiteral(@"d><button class='btn btn-danger'>삭제하기</button></td>  </tr>"";
                $('#modaltable').append(rowItem);
                rowItem = ""</tr>"";

                if (infoArray.length == 0)
                    infoArray.push({ name: this.attributes.value1.nodeValue, price: this.attributes.value2.nodeValue, count: 1 });
                else {
                    var check = 0;
                    for (var i = 0; i < infoArray.length; i++) {
                        if (infoArray[i].name == this.attributes.value1.nodeValue) {
                            infoArray[i].count++;
                            check = 0;
                        }
                        else
                            check++;
                    }
                    if (check == infoArray.length)
                        infoArray.push({ name: this.attributes.value1.nodeValue, price: this.attributes.value2.nodeValue, count: 1 });
                }


                //new!
                for (var j = 0; j < infoA");
                WriteLiteral(@"rray.length; j++) {
                    for (var k = 0; k < infoArray[j].count; k++) {
                        stackNA.push(infoArray[j].name);
                        stackPA.push(infoArray[j].price);
                    }
                    // 중복허용
                }
                //ajax통신을 통해 table에 들어가는 값을 controller로 보낸다
                $.ajax({
                    //url 타깃은 kioskcontroller의 Iteminput이라는 메소드
                    url: '");
                EndContext();
                BeginContext(30737, 31, false);
#line 954 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                     Write(Url.Action("itemInput","Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(30768, 1805, true);
                WriteLiteral(@"',
                    //contentType: ""application/json"",
                    type: 'POST',
                    traditional: true,
                    dataType: ""json"",
                    data: { picked: stackNA, price: stackPA },
                    //위와 같은원리
                    success: function (result) { },
                    error: function () { alert('error'); }
                })
                stackNA = [];
                stackPA = [];
            });

            $("".btn-warning"").click(function () {
                var table = document.getElementById(""modalTable"");
                var index = table.rows.length;
                for (var i = index; i > 1; i--) {
                    table.deleteRow(i - 1);
                }
                // 기존 값 없애기
                for (var i = 0; i < infoArray.length; i++) {
                    rowItem = ""<tr> <td>"";
                    rowItem += infoArray[i].name;            // 제품명
                    rowItem += ""</td > <td>"";
        ");
                WriteLiteral(@"            rowItem += infoArray[i].count;            //
                    rowItem += ""</td > <td>""
                    rowItem += infoArray[i].price;
                    rowItem += ""</td > "";
                    rowItem += ""<td><button class='btn btn-danger'>삭제하기</button></td>  </tr>"";
                    $('#modalTable').append(rowItem);
                    rowItem = ""</tr>"";

                    for (var j = 0; j < infoArray[i].count; j++) {
                        Pitem.push(infoArray[i].name);
                        Pvalue.push(infoArray[i].price);
                    }
                    //중복에러 제거 05:34 0613


                        //alert(infoArray.length);
                }




                $.ajax({

                         url: '");
                EndContext();
                BeginContext(32574, 31, false);
#line 1002 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                          Write(Url.Action("itemInput","Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(32605, 1763, true);
                WriteLiteral(@"',
                        //contentType: ""application/json"",
                        type: 'POST',
                        traditional: true,
                        dataType:""json"",
                        data: { picked:Pitem, price:Pvalue },
                        success: function (result) { },
                    error: function () { alert('error');}

                    })


            });
            //계산서 변경 코드
            //1. 장바구니에 넣을때마다 값을 infoArray에 받는다
            //2. infoArray에 들어가는 값은 값중복확인을 통해 같은 메뉴는 count증가로 변경
            //3. 해당 변경된 값을 계산서를 열때마다 테이블에 뿌려준다.
            //ps1 장바구니를 modaltable이라는 id를 사용했으므로 modalTable로 해당 id를 변경했다.
            //ps2 버튼을 끄면 모든 값을 제거해야하는 것을 추가해야한다.
            //ps3 ps2는 삭제하기를 통해 값을 제거할떄 같이 만들어줄것, by동훈 (혹 코드 변경하는 사람은 제게 말해주세요. 즉시 고쳐놓겠습니다.)

            $('#modaltable').on('click', '.btn', function () {
                var tr = $(this).parent().parent();
                var td = tr.children();
                var name = td.eq(0).text()");
                WriteLiteral(@";                     // 사용하기 좋다.
                var price = """";                                 //new,delete in model
                for (var i = 0; infoArray.length > i; i++) {
                    if (infoArray[i].name == name) {
                        priceA = infoArray[i].price;            //new, delete in model, 특이점, priceA를 선언 안해도 되네? price라고 잘못했었는데도 됨 <- 아마 인터프리터
                        if (infoArray[i].count == 1)
                            infoArray.splice(i, 1);
                        else
                            infoArray[i].count--;
                    }
                }
                tr.remove();
                //new, delete in model
                 $.ajax({
                         url: '");
                EndContext();
                BeginContext(34369, 29, false);
#line 1040 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                          Write(Url.Action("itemOut","Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(34398, 2093, true);
                WriteLiteral(@"',
                        //contentType: ""application/json"",
                        type: 'POST',
                        traditional: true,
                        dataType:""json"",
                     data: { menu:name, price:priceA },
                        success: function (result) {},
                    error: function () { alert('error'); }
                    })
            });

            // 삭제하기 구현

            $('#modalTable').on('click', '.btn', function () {
                var tr = $(this).parent().parent();
                var td = tr.children();
                var name = td.eq(0).text();                     // 사용하기 좋다.

                for (var i = 0; infoArray.length > i; i++) {
                    if (infoArray[i].name == name) {
                        infoArray.splice(i, 1);
                        break;
                    }
                }
                tr.remove();

                var asyncTable = $('#modaltable');
                var ts = asyncTab");
                WriteLiteral(@"le.children().children();
                console.log(ts);
                console.log(ts.length);
                for (var i = 0; i < ts.length; i++) {
                    ts.eq(i).remove();
                }
                for (var i = 0; i < infoArray.length; i++) {
                    for (var j = 0; j < infoArray[i].count; j++) {
                        rowItem = ""<tr> <td>"";
                        rowItem += infoArray[i].name;            // 제품명
                        rowItem += ""</td > <td>"";
                        rowItem += infoArray[i].price;            //
                        rowItem += ""</td > <td>""
                        rowItem += 1;
                        rowItem += ""</td > "";
                        rowItem += ""<td><button class='btn btn-danger'>삭제하기</button></td>  </tr>"";
                        $('#modaltable').append(rowItem);
                    }
                }
                //계산서에서 지워지면 장바구니도 지워지게 하기

                //new, delete in model
             ");
                WriteLiteral("    $.ajax({\r\n                         url: \'");
                EndContext();
                BeginContext(36492, 30, false);
#line 1090 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                          Write(Url.Action("totalOut","Kiosk"));

#line default
#line hidden
                EndContext();
                BeginContext(36522, 787, true);
                WriteLiteral(@"',
                        //contentType: ""application/json"",
                        type: 'POST',
                        traditional: true,
                        dataType:""json"",
                     data: { menu:name },
                        success: function (result) {},
                    error: function () { alert('error'); }
                    })
            });
            // 사실상 priceA랑 인자는 필요 없었던걸로. 삭제하기 누르면 해당 모든 갯수 다 없어짐
            });
        //DH's table, 장바구니에 넣는 코드
    </script>

    <script src=""https://code.jquery.com/jquery-3.3.1.min.js""
            integrity=""sha384-tsQFqpEReu7ZLhBV2VZlAu7zcOV+rXbYlF2cqB8txI/8aZajjp4Bqd+V6D5IgvKT""
            crossorigin=""anonymous""></script>

    <div class=""jumbotron text-center mb-0"">
        ");
                EndContext();
                BeginContext(37309, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "aa2a7342fe96451cb10fa00ef0564440", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(37368, 123, true);
                WriteLiteral("\r\n\r\n        <h2>사랑과 정성으로!</h2>\r\n        <button class=\"voicebtn\" type=\"submit\" id=\"voice_start\" onclick=\"speech_to_text()\">");
                EndContext();
                BeginContext(37491, 93, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7f793fc230864a04ae6e3977b30b497b", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(37584, 106, true);
                WriteLiteral("</button>\r\n    </div>\r\n\r\n    <nav class=\"menu\">\r\n        <ol>\r\n            <li class=\"menu-item active\"><a");
                EndContext();
                BeginWriteAttribute("href", " href=\'", 37690, "\'", 37727, 1);
#line 1118 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 37697, Url.Action("Index" , "Kiosk"), 37697, 30, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(37728, 173, true);
                WriteLiteral(">Home</a></li>\r\n            <li class=\"menu-item\">\r\n                <a href=\"#0\">햄버거</a>\r\n                <ol class=\"sub-menu\">\r\n                    <li class=\"menu-item\"><a");
                EndContext();
                BeginWriteAttribute("href", " href=\'", 37901, "\'", 37947, 1);
#line 1122 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 37908, Url.Action("Menu_Hambuger1" , "Kiosk"), 37908, 39, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(37948, 55, true);
                WriteLiteral(">전체메뉴</a>\r\n                    <li class=\"menu-item\"><a");
                EndContext();
                BeginWriteAttribute("href", " href=\'", 38003, "\'", 38057, 1);
#line 1123 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 38010, Url.Action("Menu_Hambuger_Chicken1" , "Kiosk"), 38010, 47, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(38058, 53, true);
                WriteLiteral(">치킨</a>\r\n                    <li class=\"menu-item\"><a");
                EndContext();
                BeginWriteAttribute("href", " href=\'", 38111, "\'", 38164, 1);
#line 1124 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 38118, Url.Action("Menu_Hambuger_bulgogi" , "Kiosk"), 38118, 46, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(38165, 54, true);
                WriteLiteral(">불고기</a>\r\n                    <li class=\"menu-item\"><a");
                EndContext();
                BeginWriteAttribute("href", " href=\'", 38219, "\'", 38268, 1);
#line 1125 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 38226, Url.Action("Menu_Hambuger_ETC" , "Kiosk"), 38226, 42, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(38269, 87, true);
                WriteLiteral(">기타</a>\r\n                </ol>\r\n            </li>\r\n            <li class=\"menu-item\"><a");
                EndContext();
                BeginWriteAttribute("href", " href=\'", 38356, "\'", 38396, 1);
#line 1128 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 38363, Url.Action("SideMenu" , "Kiosk"), 38363, 33, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(38397, 66, true);
                WriteLiteral(">사이드메뉴</a>\r\n            <li class=\"menu-item\">\r\n                <a");
                EndContext();
                BeginWriteAttribute("href", " href=\'", 38463, "\'", 38508, 1);
#line 1130 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 38470, Url.Action("Menu_beverage" , "Kiosk"), 38470, 38, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(38509, 320, true);
                WriteLiteral(@">음료</a>
            </li>
        </ol>
    </nav>




    <div class=""mn"">
        <table style=""margin:auto;"">
            <tr style=""text-align: center"">
                <td>
                    <br><br>
                    <button class=""btn menus"" id=""burg10"" type=""submit"" value1=""싸이버거"" value2=""3400"">");
                EndContext();
                BeginContext(38829, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "2f84e97745174d5aad908d9b05f0428d", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(38872, 272, true);
                WriteLiteral(@"</button><br>
                    싸이버거
                    <br>
                    3400원
                </td>
                <td>
                    <br><br>
                    <button class=""btn menus"" id=""burg11"" type=""submit"" value1=""언빌리버블버거"" value2=""5100"">");
                EndContext();
                BeginContext(39144, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "7b2bc1826bac4d80bb8267dec952ed39", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(39187, 275, true);
                WriteLiteral(@"</button><br>
                    언빌리버블버거
                    <br>
                    5100원
                </td>
                <td>
                    <br><br>
                    <button class=""btn menus"" id=""burg12"" type=""submit"" value1=""인크레더블버거"" value2=""4900"">");
                EndContext();
                BeginContext(39462, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "36a4191264754bc2ac00a5d49515e3c3", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(39507, 340, true);
                WriteLiteral(@"</button><br>
                    인크레더블버거
                    <br>
                    4900원
                </td>
            </tr>
            <tr style=""text-align: center;"">
                <td>
                    <br><br>
                    <button class=""btn menus"" id=""burg13"" type=""submit"" value1=""치즈베이컨버거"" value2=""4500"">");
                EndContext();
                BeginContext(39847, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "73939f4b31b046fcadc981ad0bbcfc59", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(39893, 277, true);
                WriteLiteral(@"</button><br>
                    치즈베이컨버거
                    <br>
                    4500원
                </td>
                <td>
                    <br><br>
                    <button class=""btn menus"" id=""burg14"" type=""submit"" value1=""치킨 커틀렛 버거"" value2=""5400"">");
                EndContext();
                BeginContext(40170, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d8f0791a96984390bca8cbb76f7f2213", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(40216, 275, true);
                WriteLiteral(@"</button><br>
                    치킨 커틀렛 버거
                    <br>
                    5400원
                </td>
                <td>
                    <br><br>
                    <button class=""btn menus"" id=""burg15"" type=""submit"" value1=""통새우버거"" value2=""2900"">");
                EndContext();
                BeginContext(40491, 41, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "51b6fa833e1a4887a4306084add3e060", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(40532, 341, true);
                WriteLiteral(@"</button><br>
                    통새우버거
                    <br>
                    2900원
                </td>
            </tr>
            <tr style=""text-align: center;"">
                <td>
                    <br><br>
                    <button class=""btn menus"" id=""burg16"" type=""submit"" value1=""할라피뇨통가슴살버거"" value2=""3900"">");
                EndContext();
                BeginContext(40873, 42, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "5b9f2617de174650a014c2f94e863c74", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(40915, 279, true);
                WriteLiteral(@"</button><br>
                    할라피뇨통가슴살버거
                    <br>
                    3900원
                </td>
                <td>
                    <br><br>
                    <button class=""btn menus"" id=""burg17"" type=""submit"" value1=""할라피뇨통살버거"" value2=""3900"">");
                EndContext();
                BeginContext(41194, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "1576cfd068a3400a8289076c6993bf9a", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(41237, 276, true);
                WriteLiteral(@"</button><br>
                    할라피뇨통살버거
                    <br>
                    3900원
                </td>
                <td>
                    <br><br>
                    <button class=""btn menus"" id=""burg18"" type=""submit"" value1=""햄치즈휠렛버거"" value2=""3900"">");
                EndContext();
                BeginContext(41513, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "f66a5112405b499f80e1f87f09993980", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(41557, 298, true);
                WriteLiteral(@"</button><br>
                    햄치즈휠렛버거
                    <br>
                    3900원
                </td>
            </tr>

        </table>
    </div>



    <div class=""text-xs-center"">
        <ul class=""pagination"">
            <li class=""page-item""><a class=""page-link""");
                EndContext();
                BeginWriteAttribute("href", " href=\'", 41855, "\'", 41901, 1);
#line 1217 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 41862, Url.Action("Menu_Hambuger1" , "Kiosk"), 41862, 39, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(41902, 68, true);
                WriteLiteral(">이전</a></li>\r\n            <li class=\"page-item\"><a class=\"page-link\"");
                EndContext();
                BeginWriteAttribute("href", " href=\'", 41970, "\'", 42016, 1);
#line 1218 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 41977, Url.Action("Menu_Hambuger3" , "Kiosk"), 41977, 39, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(42017, 439, true);
                WriteLiteral(@">다음</a></li>
        </ul>
    </div>
    <div class=""jumbotron text-center"" style=""background-color: #04B486"" margin:""0"">
        <h3 style=""color:#ffec85; text-align:left"">
            장바구니
        </h3>
        <div class=""jumbotron text-center mt-5 mb-0"">
            <table id=""modaltable"" style=""width: 100%; border: 1px solid #949494; color:black"">
                <tbody style=""width: 100%; border: 1px solid #949494; "">
");
                EndContext();
#line 1228 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                      
                        if (Bag.Rpicked != null)
                        {
                            string[] menu = Bag.Rpicked.Split(",");
                            string[] price = Bag.Rprice.Split(",");
                            for (var i = 0; i < menu.Length - 1; i++)
                            {

#line default
#line hidden
                BeginContext(42797, 78, true);
                WriteLiteral("                                <tr>\r\n                                    <td>");
                EndContext();
                BeginContext(42876, 7, false);
#line 1236 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                                   Write(menu[i]);

#line default
#line hidden
                EndContext();
                BeginContext(42883, 47, true);
                WriteLiteral("</td>\r\n                                    <td>");
                EndContext();
                BeginContext(42931, 8, false);
#line 1237 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                                   Write(price[i]);

#line default
#line hidden
                EndContext();
                BeginContext(42939, 185, true);
                WriteLiteral("</td>\r\n                                    <td>1</td>\r\n                                    <td><button class=\"btn btn-danger\">삭제하기</button></td>\r\n                                </tr>\r\n");
                EndContext();
#line 1241 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
                            }
                        }
                    

#line default
#line hidden
                BeginContext(43205, 2054, true);
                WriteLiteral(@"                </tbody>
            </table>
        </div>
        <br><br>
        <div>
            <button type=""button"" class=""btn btn-warning"" style=""color:white"" data-toggle=""modal"" data-target=""#myModal"">일반 구매하기</button>
            <button type=""button"" class=""btn btn-warning"" style=""color:white""
                    data-toggle=""modal"" data-target=""#myModal"">
                기프티콘으로 구매하기
            </button>

        </div>

    </div>
    <div class=""jumbotron text-center mt-5 mb-0"" margin=""0"">
        <h3 class=""text-secondary"">COM'S TOUCH</h3>
        <p>
            Com's touch loves <span class=""text-primary"">everyone!</span> <br> Designed by <span class=""text-primary"">Seoyeon</span>
        </p>
    </div>
    <div class=""modal"" id=""myModal"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">

                <!-- Modal Header -->
                <div class=""modal-header"">
                    <h4 class=""modal-title"">주문확인서</h4>
                ");
                WriteLiteral(@"    <button type=""button"" class=""btn close"" data-dismiss=""modal"">&times;</button>
                </div>

                <!-- Modal body -->
                <div class=""modal-body"">
                    <div>
                        <table id=""modalTable"" style=""width: 100%; border: 1px solid #949494;"">
                            <thead>
                                <tr style=""text-align: center"">
                                    <th>제품명</th>
                                    <th>수량</th>
                                    <th>가격</th>
                                    <th>변경</th>
                                </tr>
                            </thead>
                            <tbody style=""width: 100%; border: 1px solid #949494; color:black;""></tbody>
                        </table>
                    </div>
                </div>

                <!-- Modal footer -->
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-su");
                WriteLiteral("ccess\"");
                EndContext();
                BeginWriteAttribute("onclick", " onclick=\"", 45259, "\"", 45315, 3);
                WriteAttributeValue("", 45269, "location.href=\'", 45269, 15, true);
#line 1293 "C:\Users\ins25k\Desktop\0611 (4) (2)\cSharpPro\cSharpPro\Views\Kiosk\Menu_Hambuger2.cshtml"
WriteAttributeValue("", 45284, Url.Action("Receipt","Kiosk"), 45284, 30, false);

#line default
#line hidden
                WriteAttributeValue("", 45314, "\'", 45314, 1, true);
                EndWriteAttribute();
                BeginContext(45316, 90, true);
                WriteLiteral(">결제하기</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(45413, 13, true);
            WriteLiteral("\r\n\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
